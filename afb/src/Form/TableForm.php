<?php

/**
 * @file
 *  delete query for deletion of afb blocks generated by afb
 */

namespace Drupal\afb\Form;

use Drupal\Core\Form\FormBase;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements the TableForm form controller.
 *
 * @see \Drupal\Core\Form\FormBase
 */
class TableForm extends FormBase
{
    /**
   * Build the table form.
   */
  public function buildForm(array $form, FormStateInterface $form_state)
  {
      $form = array();

      $header = array(
      'title' => t('title'),
      'form_type' => t('form type'),
      'content_type' => t('content type'),
      'nid' => t('nid'),
      );

      $db = \Drupal::database();
      $result = $db->select('afb_blocks_data', 'n')->fields('n', array('delta', 'title', 'form_type', 'content_type', 'nid'))->execute();
        // $count = $result->rowCount();
        foreach ($result as $row) {
            $entries[] = array(
          'delta' => $row->delta,
          'title' => $row->title,
          'form_type' => $row->form_type,
          'content_type' => $row->content_type,
          'nid' => $row->nid,
        );
        }
  // Save the query to matches.
  $options = array();
      if (!empty($entries)) {
          foreach ($entries as $entry) {
              $options[$entry['delta']] = array(
      'title' => $entry['title'],
      'form_type' => $entry['form_type'],
      'content_type' => $entry['content_type'],
      'nid' => $entry['nid'],
    );
          }
      }

      $form['table'] = array(
  '#type' => 'tableselect',
  '#header' => $header,
  '#options' => $options,
  '#empty' => t('No form blocks found'),
  );
      dpm($form_state->get('table'));

      $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Delete Selected'),

  );

      return $form;
  }

  /*
   * Getter method for Form ID.
   */

  public function getFormId()
  {
      return 'afb_simple_form';
  }

  /*
   * Implements form validation.
   */
  public function validateForm(array &$form, FormStateInterface $form_state)
  {
  }

  /**
   * Implements a form submit handler.
   */
  public function submitForm(array &$form, FormStateInterface $form_state)
  {
      /**
     * Deletes a block instance from the block tables.
     */
    function afb_block_delete($delta)
    {
        // $db = \Drupal::database();

      //    $result = $db->update('afb_blocks_data', 'n')
      //    ->fields('n', array('delta', 'title', 'content_type', 'form_type', 'nid', 'data'))
      //    ->condition('n.delta', $delta, '=')
      //    ->execute();
    //      db_update('block')->fields(array('region' => '-1'))->condition('delta', $delta)->execute();
    //      db_delete('block_custom') ->condition('bid', $delta) ->execute();
    //      db_delete('block') ->condition('module', 'afb') ->condition('delta', $delta) ->execute();
    //      db_delete('block_role') ->condition('module', 'afb') ->condition('delta', $delta) ->execute();
    //     //  afb_get_node_form_block_data($delta)
    //      $data = afb_get_node_form_block_data($delta);
    //      // $email = $form_state->getValue('email_address');
    //      // drupal_set_message(t('The %name block has been removed.', array('%name' => $data->title)));
    //      drupal_set_message( $this->t('The @name block has been removed.', array('@name' => $data->title)));
    //      cache_clear_all();
    //      return;
    }
    // //
    //    /**
    //     * Returns the data object retrieved from the advanced form block             tables.
    //     */
    //
    //
    // function afb_get_node_form_block_data($delta) {
    //
    //    $db = \Drupal::database();
    //    $result = $db->select('afb_blocks_data', 'n')
    //    ->fields('n', array('delta', 'title', 'content_type', 'form_type', 'nid', 'data'))
    //    ->condition('n.delta', $delta, '=')
    //    ->execute();
    //
    //    foreach ($result as $row) {
    //      $result_obj = $row;
    //    }
    //
    //    return $result_obj;
    //  }
    /*
     * Submit handler for the existing block list form facilitating its deletion.
     */
// $form_state['values']['table'];
  foreach ($form_state->getValue('table') as $key => $val) {
      if ($val != 0) {
          // $this->afb_block_delete($val);
      //  afb_block_delete($val);
      //     db_delete('afb_blocks_data')
      //       ->condition('delta', $val)
      //       ->execute();
      }
  }
//
  }

  /**
   * Submit handler for the existing block list form facilitating its deletion.
   */
  public function afb_existing_blocks_display_form_submit($form, $form_state)
  {
      foreach ($form_state['values']['table'] as $key => $val) {
          if ($val != 0) {
              afb_block_delete($val);
              db_delete('afb_blocks_data')
                ->condition('delta', $val)
                ->execute();
          }
      }
  }
/**
 * Deletes a block instance from the block tables.
 */
public function afb_block_delete($delta)
{
    db_update('block')->fields(array('region' => '-1'))->condition('delta', $delta)->execute();
    db_delete('block_custom')
          ->condition('bid', $delta)
          ->execute();
    db_delete('block')
          ->condition('module', 'afb')
          ->condition('delta', $delta)
          ->execute();
    db_delete('block_role')
          ->condition('module', 'afb')
          ->condition('delta', $delta)
          ->execute();
    $data = afb_get_node_form_block_data($delta);
    drupal_set_message(t('The %name block has been removed.', array('%name' => $data->title)));
    cache_clear_all();

    return;
}
/**
 * Returns the data object retrieved from the advanced form block tables.
 */
public function afb_get_node_form_block_data($delta)
{
    $result = db_select('afb_blocks_data', 'n')
                  ->fields('n', array('delta',
                    'title',
                    'content_type',
                    'form_type',
                    'nid',
                    'data', ))
                  ->condition('n.delta', $delta, '=')
                  ->execute();
    foreach ($result as $row) {
        $result_obj = $row;
    }

    return $result_obj;
}
}
